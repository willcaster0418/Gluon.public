DROP DATABASE IF EXISTS OMS;
DROP DATABASE IF EXISTS AUTH;
CREATE DATABASE AUTH;
CREATE DATABASE OMS;
USE OMS;
CREATE TABLE `ORDER` (
	`id`	INT UNSIGNED	NOT NULL,
	`user_id`	CHAR(128)	NOT NULL,
	`account_id`	INT UNSIGNED	NOT NULL,
	`item_id`	CHAR(64)	NOT NULL,
	`item_type`	CHAR(16)	NOT NULL,
	`type_code`	CHAR(8)	NULL,
	`side`	CHAR(8)	NULL,
	`price`	DOUBLE	NULL,
	`qty`	DOUBLE	NULL,
	`match_qty`	DOUBLE	NULL,
	`reject_qty`	DOUBLE	NULL,
	`status`	CHAR(32)	NULL,
	`time`	CHAR(128)	NULL,
	`short_code`	CHAR(8)	NULL,
	`short_info`	CHAR(64)	NULL,
	`user_field`	TEXT	NULL
);

CREATE TABLE `BROKER` (
	`id`	INT UNSIGNED	NOT NULL,
	`name`	CHAR(128)	NULL,
	`info`	TEXT	NULL
);

CREATE TABLE `ACCOUNT` (
	`id`	INT UNSIGNED	NOT NULL,
	`broker_id`	INT UNSIGNED	NOT NULL,
	`name`	CHAR(32)	NULL,
	`number`	CHAR(128)	NULL
);

CREATE TABLE `BALANCE` (
	`id`	INT UNSIGNED	NOT NULL,
	`item_id`	CHAR(64)	NOT NULL,
	`item_type`	CHAR(16)	NOT NULL,
	`account_id`	INT UNSIGNED	NOT NULL,
	`price`	DOUBLE	NULL,
	`qty`	DOUBLE	NULL,
	`short_code`	CHAR(8)	NULL
);

CREATE TABLE `ITEM` (
	`id`	CHAR(16)	NOT NULL,
	`type`	CHAR(16)	NOT NULL,
	`market_id`	CHAR(16)	NOT NULL,
	`currency_id`	CHAR(16)	NOT NULL,
	`name`	CHAR(128)	NULL,
	`price`	DOUBLE	NULL,
	`seq`	INT UNSIGNED	NULL
);

CREATE TABLE `MATCH` (
	`id`	INT UNSIGNED	NOT NULL,
	`order_id`	INT UNSIGNED	NOT NULL,
	`price`	DOUBLE	NULL,
	`qty`	DOUBLE	NULL,
	`time`	CHAR(128)	NULL
);

CREATE TABLE `MARKET` (
	`id`	CHAR(16)	NOT NULL,
	`name`	CHAR(16)	NULL,
	`info`	TEXT	NULL
);

CREATE TABLE `USER` (
	`id`	CHAR(128)	NOT NULL,
	`name`	CHAR(32)	NULL,
	`status`	CHAR(16)	NULL,
	`token`	TEXT	NULL,
	`info`	TEXT	NULL
);

CREATE TABLE `DEPOSIT` (
	`id`	INT UNSIGNED	NOT NULL,
	`currency_id`	CHAR(16)	NOT NULL,
	`amount`	DOUBLE	NULL
);

CREATE TABLE `USER_ACCOUNT` (
	`user_id`	CHAR(128)	NOT NULL,
	`account_id`	INT UNSIGNED	NOT NULL
);

CREATE TABLE `CURRENCY` (
	`id`	CHAR(16)	NOT NULL,
	`name`	CHAR(16)	NULL
);

CREATE TABLE `CURRENCY_RATE` (
	`currency_id_base`	CHAR(16)	NOT NULL,
	`currency_id_target`	CHAR(16)	NOT NULL,
	`rate`	DOUBLE	NULL,
	`time`	CHAR(128)	NULL
);

CREATE TABLE `USER_BROKER` (
	`user_id`	CHAR(128)	NOT NULL,
	`broker_id`	INT UNSIGNED	NOT NULL,
	`api_key`	TEXT	NULL,
	`secrete_key`	TEXT	NULL,
	`info`	CHAR(128)	NULL
);

CREATE TABLE `USER_ACTION` (
	`id`	CHAR(128)	NOT NULL,
	`action`	CHAR(16)	NULL,
	`action_info`	TEXT	NULL,
	`time`	CHAR(128)	NULL,
	`info`	TEXT	NULL
);

CREATE TABLE `MARKET_SNAP` (
	`market_id`	CHAR(16)	NOT NULL,
	`count`	INT UNSIGNED	NULL,
	`type`	CHAR(16)	NULL,
	`info`	CHAR(128)	NULL
);

ALTER TABLE `ORDER` ADD CONSTRAINT `PK_ORDER` PRIMARY KEY (
	`id`
);

ALTER TABLE `BROKER` ADD CONSTRAINT `PK_BROKER` PRIMARY KEY (
	`id`
);

ALTER TABLE `ACCOUNT` ADD CONSTRAINT `PK_ACCOUNT` PRIMARY KEY (
	`id`
);

ALTER TABLE `BALANCE` ADD CONSTRAINT `PK_BALANCE` PRIMARY KEY (
	`id`
);

ALTER TABLE `ITEM` ADD CONSTRAINT `PK_ITEM` PRIMARY KEY (
	`id`,
	`type`
);

ALTER TABLE `MATCH` ADD CONSTRAINT `PK_MATCH` PRIMARY KEY (
	`id`
);

ALTER TABLE `MARKET` ADD CONSTRAINT `PK_MARKET` PRIMARY KEY (
	`id`
);

ALTER TABLE `USER` ADD CONSTRAINT `PK_USER` PRIMARY KEY (
	`id`
);

ALTER TABLE `DEPOSIT` ADD CONSTRAINT `PK_DEPOSIT` PRIMARY KEY (
	`id`
);

ALTER TABLE `USER_ACCOUNT` ADD CONSTRAINT `PK_USER_ACCOUNT` PRIMARY KEY (
	`user_id`,
	`account_id`
);

ALTER TABLE `CURRENCY` ADD CONSTRAINT `PK_CURRENCY` PRIMARY KEY (
	`id`
);

ALTER TABLE `MARKET_SNAP` ADD CONSTRAINT `PK_MARKET_SNAP` PRIMARY KEY (
	`market_id`
);

ALTER TABLE `DEPOSIT` ADD CONSTRAINT `FK_ACCOUNT_TO_DEPOSIT_1` FOREIGN KEY (
	`id`
)
REFERENCES `ACCOUNT` (
	`id`
);

ALTER TABLE `USER_ACCOUNT` ADD CONSTRAINT `FK_USER_TO_USER_ACCOUNT_1` FOREIGN KEY (
	`user_id`
)
REFERENCES `USER` (
	`id`
);

ALTER TABLE `USER_ACCOUNT` ADD CONSTRAINT `FK_ACCOUNT_TO_USER_ACCOUNT_1` FOREIGN KEY (
	`account_id`
)
REFERENCES `ACCOUNT` (
	`id`
);

ALTER TABLE `MARKET_SNAP` ADD CONSTRAINT `FK_MARKET_TO_MARKET_SNAP_1` FOREIGN KEY (
	`market_id`
)
REFERENCES `MARKET` (
	`id`
);